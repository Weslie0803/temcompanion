name: Build and Release PyQt Executables

on:
  push:
    tags:
      - 'v*'   # 推送版本标签时触发 (例如 v1.0.0)

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    # 设置版本号 (从标签获取)
    - name: Set version number
      shell: bash
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
        
    # macOS 特定依赖
    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: |
        brew install libomp
        # Use the default developer directory, or specify the correct Xcode version
        sudo xcode-select -p || sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        
    # Windows 特定依赖
    - name: Install Windows dependencies
      if: runner.os == 'Windows'
      run: |
        choco install vcredist140 -y
        
    - name: Install Python dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install ./
        pip install pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Build application
      shell: bash
      run: |
        # 根据操作系统设置路径分隔符
        if [ "$RUNNER_OS" == "Windows" ]; then
          SEPARATOR=";"
          OUTPUT_NAME="TEMCompanion_Windows_v${APP_VERSION}"
        else
          SEPARATOR=":"
          OUTPUT_NAME="TEMCompanion_macOS_v${APP_VERSION}"
        fi
        
        pyinstaller --noconfirm --onefile --windowed \
          --name "$OUTPUT_NAME" \
          TemCompanion/TemCompanion.py
        
    # macOS 权限修复
    - name: Fix macOS permissions
      if: runner.os == 'macOS'
      run: |
        chmod -R 755 dist
        find dist -type f -exec xattr -c {} \;
        
    # 创建 ZIP 压缩包
    - name: Create release package
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          7z a -r $OUTPUT_NAME.zip dist/*
        else
          zip -r $OUTPUT_NAME.zip dist/*
        fi
        ls -l
            
    # 确认文件已在根目录
    - name: List files for debug
      shell: bash
      run: | 
        ls -l
        ls -l dist

    - name: Echo output name
      shell: bash
      run: echo $OUTPUT_NAME
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT_NAME }}
        path: ${{ env.OUTPUT_NAME }}.zip

  # 创建 Release
  create-release:
    name: Create Release
    needs: build  # 依赖 build 任务完成
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.OUTPUT_NAME }}
        path: artifacts
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        body: |
          ### 版本 ${{ github.ref_name }}
          
          包含以下平台的可执行文件：
          - Windows: MyApp_Windows_v${{ env.APP_VERSION }}.zip
          - macOS: MyApp_macOS_v${{ env.APP_VERSION }}.zip
          
          自动生成于 ${{ github.event.head_commit.timestamp }}
        files: |
          artifacts/TEMCompanion_*/
        draft: false
        prerelease: false
